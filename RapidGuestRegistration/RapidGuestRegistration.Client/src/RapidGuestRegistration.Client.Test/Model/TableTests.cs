/*
 * RapidGuestRegistration - OpenAPI 3.0
 *
 * This is the RapidGuestRegistration API, used for everything from creating tables to managing users, as well as registering for guests.
 *
 * The version of the OpenAPI document: 3.0.2
 * Contact: group-b@rapidguestregistration.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using RapidGuestRegistration.Client.Api;
using RapidGuestRegistration.Client.Model;
using RapidGuestRegistration.Client.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace RapidGuestRegistration.Client.Test.Model
{
    /// <summary>
    ///  Class for testing TableBooking
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TableTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TableBooking
        //private TableBooking instance;

        public TableTests()
        {
            // TODO uncomment below to create an instance of TableBooking
            //instance = new TableBooking();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TableBooking
        /// </summary>
        [Fact]
        public void TableInstanceTest()
        {
            // TODO uncomment below to test "IsType" TableBooking
            //Assert.IsType<TableBooking>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'XCoordinate'
        /// </summary>
        [Fact]
        public void XCoordinateTest()
        {
            // TODO unit test for the property 'XCoordinate'
        }
        /// <summary>
        /// Test the property 'YCoordinate'
        /// </summary>
        [Fact]
        public void YCoordinateTest()
        {
            // TODO unit test for the property 'YCoordinate'
        }

    }

}
