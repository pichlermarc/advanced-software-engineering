@using RapidGuestRegistration.Client.Model
@using RapidGuestRegistration.Client.Api
@using RapidGuestRegistration.Client.Client
@using Microsoft.AspNetCore.Identity;

@inject IDefaultApi Api
@inject NavigationManager NavigationManager

@if (_user != null)
{
<EditForm Model="@_user" OnValidSubmit="@HandleValidSubmit">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<fieldset>
		<label for="name">Name:</label>
		<br />
		<InputText id="name" @bind-Value="_user.Name" style="margin-bottom:10px" />
		<br />
		<label for="email">Email:</label>
		<br />
		<InputText id="email" @bind-Value="_user.Email" style="margin-bottom:10px" />
		<br />
		<label for="password">Password:</label>
		<br />
		<InputText id="password" @bind-Value="_user.Password" style="margin-bottom:10px" />
		<br />
	</fieldset>

	<b style="margin-bottom:10px; margin-top:20px">Allowed Locations</b>

	@foreach (var location in _locations)
	{
		<div >
			<InputCheckbox @bind-Value="@_checkedLocations[location.Id].Value"  @onchange="@((ChangeEventArgs __e) => changeOption(__e,location.Id))"></InputCheckbox>
			<label>@location.Name</label>
		</div>
	}


	<button class="btn btn-primary" type="submit">Save</button>
</EditForm>
}
else
{
	<div class="alert alert-danger">
		<strong>Error:</strong> Could not find the location with the ID @UserId, maybe it has been deleted?
	</div>
}

@if (_showUpdateError)
{
	<div class="alert alert-warning alert-dismissible fade show" role="alert">
		<strong>Error:</strong> Something went wrong when updating this user. Does it still exist?
		<button type="button" class="close" @onclick="() => _showUpdateError = false">
			<span aria-hidden="true">&times;</span>
		</button>
	</div>
}

@code {

	public class FormResponse
	{
		public bool Value
		{
			get; set;
		}

		public FormResponse(bool value)
		{
			Value = value;
		}
	}



	[Parameter]
	public long UserId { get; set; }

	private User _user;
	private List<Location> _locations;
	private Dictionary<long, FormResponse> _checkedLocations;

	private bool _showUpdateError;


	[Inject]
	protected IServiceProvider ServiceProvider { get; set; }


	protected override void OnInitialized()
	{
		try
		{
			_user = Api.GetUser(UserId);
			_locations = Api.GetLocations() ?? new List<Location>();
			_checkedLocations = new Dictionary<long, FormResponse>();


			foreach(var location in _locations)
			{
				_checkedLocations.Add(location.Id, new FormResponse(false));
			}

		}
		catch (ApiException e)
		{
			Console.WriteLine(e);
			_user = null;
		}

		base.OnInitialized();
	}


	public void changeOption(ChangeEventArgs __e, long id)
	{
		_checkedLocations[id].Value = (bool)__e.Value;
	}


	private async void HandleValidSubmit()
	{
		try
		{
			Api.UpdateUser(_user);




			var userManager = (UserManager<IdentityUser>) ServiceProvider.GetService(typeof(UserManager<IdentityUser>));

			var user = new IdentityUser();
			user.Email = _user.Email;
			user.UserName = _user.Email;
			user.EmailConfirmed = true;

			await userManager.DeleteAsync(user);
			var result = await userManager.CreateAsync(user, _user.Password);







		}
		catch (Exception e)
		{
			Console.WriteLine(e);
			_showUpdateError = true;
			return;
		}
		NavigationManager.NavigateTo("/users");
	}

}
