
@using RapidGuestRegistration.Client.Model
@using RapidGuestRegistration.Client.Api
@using RapidGuestRegistration.Client.Client

@inject IDefaultApi Api
@inject NavigationManager NavigationManager
<!--{Id = 1, Email="1abc", LocationBooking="1", TableBooking="t1", Name="Musterman1" , People = 1 },
    -->
@if (_booking != null)
{
<EditForm Model="@_booking" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset>
        <label for="name">Name:</label>
        <br />
        <InputText name="name" @bind-Value="_booking.Name" style="margin-bottom:10px" />
        <br />
        <label for="email">Email:</label>
        <br />
        <InputText email="email" @bind-Value="_booking.Email" style="margin-bottom:10px" />
        <br />
    </fieldset>


    @foreach (var location in _locations)
    {
        <div class="col-12">
            <div class="card mb-1">
                <div class="card-header">
                    <div class="input-group h-100">
                        <label>@location.Name</label>
                        <button class="btn btn-primary mr-1 float-right" @onclick="NavigateToTablesSelection">Select</button>
                    </div>

                </div>
            </div>
        </div>
        

    }

    <button class="btn btn-primary" type="submit">Save</button>
</EditForm>
}
else
{
    <div class="alert alert-danger">
        <strong>Error:</strong> Could not find the location with the ID @BookingId, maybe it has been deleted?
    </div>
}

@if (_showUpdateError)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <strong>Error:</strong> Something went wrong when updating this booking. Does it still exist?
        <button type="button" class="close" @onclick="() => _showUpdateError = false">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@code {

    [Parameter]
    public long BookingId { get; set; }

    [Parameter]
    public string LocationId { get; set; }

    [Parameter]
    public string TableId { get; set; }


    private Booking _booking;

    private List<Location> _locations;

    private Table _tables;

    private Dictionary<long, FormResponse> _checkedLocations;

    private bool _showUpdateError;

    protected override void OnInitialized()
    {
        try
        {
            _booking = Api.GetBooking(BookingId);
            _locations = Api.GetLocations() ?? new List<Location>();
            _checkedLocations = new Dictionary<long, FormResponse>();
            foreach (var location in _locations)
            {
                _checkedLocations.Add(location.Id, new FormResponse(false));
            }
        }
        catch (ApiException e)
        {
            Console.WriteLine(e);

            _booking = null;
            _locations = null;
        }

        base.OnInitialized();
    }

    private void HandleValidSubmit()
    {
        try
        {
            Api.UpdateBooking(_booking);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            _showUpdateError = true;
            return;
        }
        NavigationManager.NavigateTo("/bookings");
    }

    public class FormResponse
    {
        public bool Value
        {
            get; set;
        }

        public FormResponse(bool value)
        {
            Value = value;
        }
    }

    public void changeOption(ChangeEventArgs __e, long id)
    {
        _checkedLocations[id].Value = (bool)__e.Value;
    }

    private async Task NavigateToTablesSelection()
    {
        NavigationManager.NavigateTo($"/locations/{LocationId}/table/");
    }

}