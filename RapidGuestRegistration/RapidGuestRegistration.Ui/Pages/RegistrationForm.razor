@page "/locations/{LocationId}/table/{TableId}/register"
@using RapidGuestRegistration.Ui.Data
@using RapidGuestRegistration.Client.Api
@using RapidGuestRegistration.Client.Client

@inject IDefaultApi Api
@inject NavigationManager NavigationManager

@if (ParseErrorOccured)
{
    <div class="alert alert-danger" role="alert">Parsing Failed</div>
}


<h3>RegistrationForm</h3>

@if (!ParseErrorOccured)
{
    <EditForm Model="@editmodel" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator/>
        <ValidationSummary/>

        <label>
            <p>Name:</p>
            <InputText @bind-Value="editmodel.Name"/>
        </label>
        <br/>

        <label>
            <p>Phone Number:</p>
            <InputText @bind-Value="editmodel.Phonenumber"/>
        </label>
        <br/>

        <label>
            <p>Email:</p>
            <InputText @bind-Value="editmodel.Email"/>
        </label>
        <br/>


        <button class="btn btn-primary" type="submit">Save</button>
        @if (ApiErrorOccured)
        {
            <div class="alert alert-danger alert-dismissible fade show mt-2" role="alert">
                <strong>Api Call Failed!</strong> hmm seem something went wrong on our side
                <button type="button" class="close" data-dismiss="alert" aria-label="Close" @onclick="() => ApiErrorOccured = false">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }
    </EditForm>
}


@code {

    [Parameter]
    public string LocationId { get; set; }

    [Parameter]
    public string TableId { get; set; }

    long castedLocationId;
    long castedTableId;

    bool ParseErrorOccured;
    bool ApiErrorOccured;

    private GuestEditModel editmodel;


    protected override void OnInitialized()
    {
        editmodel = new GuestEditModel();

        try
        {
            castedLocationId = long.Parse(LocationId);
            castedTableId = long.Parse(TableId);
        }
        catch (Exception e) when (e is FormatException || e is OverflowException)
        {
            ParseErrorOccured = true;
        }
    }

    private void HandleValidSubmit()
    {
        try
        {
            Api.RegisterAtTable(castedLocationId, castedTableId, editmodel.ToGuest());
            NavigationManager.NavigateTo("thankyou");
        }
        catch (ApiException ae)
        {
            Console.WriteLine(ae.ToString());
            ApiErrorOccured = true;
        }
    }

}