openapi: 3.0.0
info:
  contact:
    email: group-b@rapidguestregistration.com
  description: This is the RapidGuestRegistration API, used for everything from creating
    tables to managing users, as well as registering for guests.
  license:
    name: MIT
    url: https://github.com/
  title: RapidGuestRegistration - OpenAPI 3.0
  version: 3.0.2
externalDocs:
  description: Read the Documentation
  url: http://github.com/
servers:
- url: /
paths:
  /location:
    get:
      description: Get locations associated with your user
      operationId: GetLocations
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Location'
                type: array
          description: Locations retrieved successfully.
      summary: Get your locations
      x-eov-operation-handler: controllers/DefaultController
    post:
      description: Add a location
      operationId: AddLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Insert successful.
        "400":
          description: Invalid location ID
      summary: Add a new location
      x-eov-operation-handler: controllers/DefaultController
    put:
      description: Update a location
      operationId: UpdateLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Update successful.
        "400":
          description: Invalid location ID
        "404":
          description: Location not found
        "403":
          description: You are not allowed to change this location.
      summary: Update an existing location
      x-eov-operation-handler: controllers/DefaultController
  /location/{locationId}:
    delete:
      description: Deletes the location with the location ID.
      operationId: DeleteLocation
      parameters:
      - description: ID of the location to return.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Delete successful.
        "400":
          description: Invalid location ID
        "404":
          description: Location not found
        "403":
          description: You are not allowed to delete this location.
      summary: Delete a specific location.
      x-eov-operation-handler: controllers/DefaultController
    get:
      description: Gets the location with the location ID.
      operationId: GetLocation
      parameters:
      - description: ID of the location to return.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Update successful.
        "400":
          description: Invalid location ID
        "404":
          description: Location not found
        "403":
          description: You are not allowed to access this location.
      summary: Get a specific location.
      x-eov-operation-handler: controllers/DefaultController
    post:
      description: Update a location
      operationId: UpdateLocationWithId
      parameters:
      - description: ID of the location to return.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Update successful.
        "400":
          description: Invalid location ID
      summary: Update an existing location
      x-eov-operation-handler: controllers/DefaultController
  /location/{locationId}/table:
    get:
      description: Get tables associated with this location
      operationId: GetTablesAtLocation
      parameters:
      - description: ID of the location to return.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Table'
                type: array
          description: Update successful.
      summary: Get your location's tables
      x-eov-operation-handler: controllers/DefaultController
    post:
      description: Add a table
      operationId: AddTableAtLocation
      parameters:
      - description: ID of the location to return.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: Insert successful.
        "400":
          description: Invalid location ID.
        "403":
          description: You are not allowed to modify this location
      summary: Add a new table on this location
      x-eov-operation-handler: controllers/DefaultController
  /location/{locationId}/table/{tableId}:
    delete:
      description: Delete the table on this location.
      operationId: DeleteTableAtLocation
      parameters:
      - description: ID of the location to return.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: ID of the location to return.
        explode: false
        in: path
        name: tableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: Table deletion successful.
        "403":
          description: Table or location does not exist.
        "404":
          description: Table or location does not exist.
      summary: Delete this table
      x-eov-operation-handler: controllers/DefaultController
    get:
      description: Get table with the given ID associated with this location
      operationId: GetTableAtLocation
      parameters:
      - description: ID of the location to return.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: ID of the location to return.
        explode: false
        in: path
        name: tableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: Table retrieval successful.
        "403":
          description: Table or location does not exist.
        "404":
          description: Table or location does not exist.
      summary: Get your tables
      x-eov-operation-handler: controllers/DefaultController
    post:
      description: Update a table
      operationId: UpdateTableAtLocation
      parameters:
      - description: ID of the location to return.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: ID of the location to return.
        explode: false
        in: path
        name: tableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: Update successful.
        "400":
          description: Invalid location or table ID
        "403":
          description: You are not allowed to edit this table.
      summary: Update an existing table
      x-eov-operation-handler: controllers/DefaultController
  /location/{locationId}/table/{tableId}/activity:
    get:
      description: Get the amount of people registered on this table in the given time-range.
      operationId: GetTableActivity
      parameters:
      - description: ID of the location to get activity from
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: ID of the table to get activity from
        explode: false
        in: path
        name: tableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Activity from
        explode: false
        in: query
        name: from
        required: true
        schema:
          format: date-time
          type: string
      - description: Activity to
        explode: false
        in: query
        name: to
        required: true
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  activity:
                    type: number
                    example: 4.5
                    description: number of visitors in the specified time range
          description: Activity lookup successful.
        "404":
          description: Location Id or Table Id not found.
        "400":
          description: Invalid location or table ID
      summary: Register on this table on this location.
      x-eov-operation-handler: controllers/DefaultController
  /location/{locationId}/table/{tableId}/register:
    post:
      description: Register on this table on this location.
      operationId: RegisterAtTable
      parameters:
      - description: ID of the location to register on.
        explode: false
        in: path
        name: locationId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: ID of the table to register on.
        explode: false
        in: path
        name: tableId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Guest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Guest'
          description: Registration successful.
        "400":
          description: Invalid location or table ID
      summary: Register on this table on this location.
      x-eov-operation-handler: controllers/DefaultController
  /location/{locationId}/table/{tableId}/report/{reportType}:
    get:
      description: Get report of reporttype on this table on this location.
      operationId: GetReportForTable
      parameters:
        - description: ID of the location to register on.
          explode: false
          in: path
          name: locationId
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - description: ID of the table to register on.
          explode: false
          in: path
          name: tableId
          required: true
          schema:
            format: int64
            type: integer
          style: simple
        - description: Datetime from which to search for guests at tableid locationid.
          explode: false
          in: query
          name: datetimeFrom
          required: true
          schema:
            format: int64
            type: integer
          style: form
        - description: Datetime to which to search for guests at tableid locationid.
          explode: false
          in: query
          name: datetimeTo
          required: true
          schema:
            format: int64
            type: integer
          style: form
        - description: type of report to retrieve.
          explode: false
          in: path
          name: reportType
          required: true
          schema:
            type: string
            example: pdf or xls
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  locationId:
                    format: int64
                    type: integer
                    description: Id of the location at which to look for guests in time range
                  tableId:
                    format: int64
                    type: integer
                    description: Id of the table at which to look for guests in time range
                  datetimeFrom:
                    format: int64
                    type: integer
                    description: datetime from which was searched for guests at locationid, tableid
                  datetimeTo:
                    format: int64
                    type: integer
                    description: datetime up to which was searched for guests at locationid, tableid
                  report:
                    type: string
                    format: base64
                    description: Base64-encoded contents of pdf
          description: Registration successful.
        "400":
          description: Invalid location or table ID
      summary: Register on this table on this location.
      x-eov-operation-handler: controllers/DefaultController
  /user:
    get:
      description: Get Users
      operationId: GetUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Locations retrieved successfully.
      summary: Get Users
      x-eov-operation-handler: controllers/DefaultController
    post:
      description: Add a User
      operationId: AddUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Insert successful.
        "400":
          description: Invalid User ID
      summary: Add a new User
      x-eov-operation-handler: controllers/DefaultController
    put:
      description: Update a User
      operationId: UpdateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Update successful.
        "400":
          description: Invalid User ID
        "404":
          description: User not found
        "403":
          description: You are not allowed to change this User.
      summary: Update an existing User
      x-eov-operation-handler: controllers/DefaultController
  /user/{userId}:
    delete:
      description: Deletes the user with the user ID.
      operationId: DeleteUser
      parameters:
      - description: ID of the user to return.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Delete successful.
        "400":
          description: Invalid user ID
        "404":
          description: User not found
        "403":
          description: You are not allowed to delete this user.
      summary: Delete a specific user.
      x-eov-operation-handler: controllers/DefaultController
    get:
      description: Gets the user with the user ID.
      operationId: GetUser
      parameters:
      - description: ID of the user to return.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Update successful.
        "400":
          description: Invalid user ID
        "404":
          description: User not found
        "403":
          description: You are not allowed to access this user.
      summary: Get a specific user.
      x-eov-operation-handler: controllers/DefaultController
    post:
      description: Update a user
      operationId: UpdateUserWithId
      parameters:
      - description: ID of the user to return.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Update successful.
        "400":
          description: Invalid user ID
      summary: Update an existing user
      x-eov-operation-handler: controllers/DefaultController
components:
  schemas:
    Guest:
      example:
        phoneNumber: +43 420 69696969
        name: Sepp Forcher
        email: sepp.forcher@orf.at
      properties:
        name:
          example: Sepp Forcher
          type: string
        email:
          example: sepp.forcher@orf.at
          format: email
          type: string
        phoneNumber:
          example: +43 420 69696969
          type: string
      type: object
    User:
      example:
        Id: 1
        name: Sepp Forcher
        email: sepp.forcher@orf.at
        password: test
      properties:
        name:
          example: Sepp Forcher
          type: string
        email:
          example: sepp.forcher@orf.at
          format: email
          type: string
        id:
          example: 1
          type: integer
        password:
          example: test
          type: string
      type: object      
    Location:
      example:
        name: Restaurant 1
        street: Coolstreet 123
        postcode: 6666
        city: Cooltown
        land: countrycool
        phoneNumber: +43 666 4566798
        email: restaurant1@cool.com
        id: 69
      properties:
        id:
          example: 69
          format: int64
          type: integer
        name:
          example: Restaurant 1
          type: string
        street:
          example: Coolstreet 123
          type: string
        postcode:
          example: 6666
          type: string
        city:
          example: Cooltown
          type: string
        land:
          example: countrycool
          type: string
        phoneNumber:
          example: +43 666 4566798
          type: string
    Table:
      example:
        name: 'Table #12'
        id: 420
        xCoordinate: 1.23
        yCoordinate: -4.56
      properties:
        id:
          example: 420
          format: int64
          type: integer
        name:
          example: 'Table #12'
          type: string
        xCoordinate:
          example: 12.56
          type: number
        yCoordinate:
          example: -3.5
          type: number
      type: objectss
